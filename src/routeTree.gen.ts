/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SellersImport } from './routes/sellers'
import { Route as LoginImport } from './routes/login'
import { Route as BuyersImport } from './routes/buyers'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as SellersNewImport } from './routes/sellers/new'
import { Route as SellersListImport } from './routes/sellers/list'
import { Route as BuyersNewImport } from './routes/buyers/new'
import { Route as BuyersListImport } from './routes/buyers/list'
import { Route as AuthProfileImport } from './routes/_auth.profile'
import { Route as SellersListSellerIdImport } from './routes/sellers/list/$sellerId'
import { Route as BuyersListBuyerIdImport } from './routes/buyers/list/$buyerId'
import { Route as SellersListEditSellerIdImport } from './routes/sellers/list/edit.$sellerId'
import { Route as SellersListSellerIdWoodPiecesListImport } from './routes/sellers/list/$sellerId/wood-pieces-list'
import { Route as BuyersListEditBuyerIdImport } from './routes/buyers/list/edit.$buyerId'

// Create/Update Routes

const SellersRoute = SellersImport.update({
  id: '/sellers',
  path: '/sellers',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const BuyersRoute = BuyersImport.update({
  id: '/buyers',
  path: '/buyers',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SellersNewRoute = SellersNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => SellersRoute,
} as any)

const SellersListRoute = SellersListImport.update({
  id: '/list',
  path: '/list',
  getParentRoute: () => SellersRoute,
} as any)

const BuyersNewRoute = BuyersNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => BuyersRoute,
} as any)

const BuyersListRoute = BuyersListImport.update({
  id: '/list',
  path: '/list',
  getParentRoute: () => BuyersRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthRoute,
} as any)

const SellersListSellerIdRoute = SellersListSellerIdImport.update({
  id: '/$sellerId',
  path: '/$sellerId',
  getParentRoute: () => SellersListRoute,
} as any)

const BuyersListBuyerIdRoute = BuyersListBuyerIdImport.update({
  id: '/$buyerId',
  path: '/$buyerId',
  getParentRoute: () => BuyersListRoute,
} as any)

const SellersListEditSellerIdRoute = SellersListEditSellerIdImport.update({
  id: '/edit/$sellerId',
  path: '/edit/$sellerId',
  getParentRoute: () => SellersListRoute,
} as any)

const SellersListSellerIdWoodPiecesListRoute =
  SellersListSellerIdWoodPiecesListImport.update({
    id: '/wood-pieces-list',
    path: '/wood-pieces-list',
    getParentRoute: () => SellersListSellerIdRoute,
  } as any)

const BuyersListEditBuyerIdRoute = BuyersListEditBuyerIdImport.update({
  id: '/edit/$buyerId',
  path: '/edit/$buyerId',
  getParentRoute: () => BuyersListRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/buyers': {
      id: '/buyers'
      path: '/buyers'
      fullPath: '/buyers'
      preLoaderRoute: typeof BuyersImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/sellers': {
      id: '/sellers'
      path: '/sellers'
      fullPath: '/sellers'
      preLoaderRoute: typeof SellersImport
      parentRoute: typeof rootRoute
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof AuthImport
    }
    '/buyers/list': {
      id: '/buyers/list'
      path: '/list'
      fullPath: '/buyers/list'
      preLoaderRoute: typeof BuyersListImport
      parentRoute: typeof BuyersImport
    }
    '/buyers/new': {
      id: '/buyers/new'
      path: '/new'
      fullPath: '/buyers/new'
      preLoaderRoute: typeof BuyersNewImport
      parentRoute: typeof BuyersImport
    }
    '/sellers/list': {
      id: '/sellers/list'
      path: '/list'
      fullPath: '/sellers/list'
      preLoaderRoute: typeof SellersListImport
      parentRoute: typeof SellersImport
    }
    '/sellers/new': {
      id: '/sellers/new'
      path: '/new'
      fullPath: '/sellers/new'
      preLoaderRoute: typeof SellersNewImport
      parentRoute: typeof SellersImport
    }
    '/buyers/list/$buyerId': {
      id: '/buyers/list/$buyerId'
      path: '/$buyerId'
      fullPath: '/buyers/list/$buyerId'
      preLoaderRoute: typeof BuyersListBuyerIdImport
      parentRoute: typeof BuyersListImport
    }
    '/sellers/list/$sellerId': {
      id: '/sellers/list/$sellerId'
      path: '/$sellerId'
      fullPath: '/sellers/list/$sellerId'
      preLoaderRoute: typeof SellersListSellerIdImport
      parentRoute: typeof SellersListImport
    }
    '/buyers/list/edit/$buyerId': {
      id: '/buyers/list/edit/$buyerId'
      path: '/edit/$buyerId'
      fullPath: '/buyers/list/edit/$buyerId'
      preLoaderRoute: typeof BuyersListEditBuyerIdImport
      parentRoute: typeof BuyersListImport
    }
    '/sellers/list/$sellerId/wood-pieces-list': {
      id: '/sellers/list/$sellerId/wood-pieces-list'
      path: '/wood-pieces-list'
      fullPath: '/sellers/list/$sellerId/wood-pieces-list'
      preLoaderRoute: typeof SellersListSellerIdWoodPiecesListImport
      parentRoute: typeof SellersListSellerIdImport
    }
    '/sellers/list/edit/$sellerId': {
      id: '/sellers/list/edit/$sellerId'
      path: '/edit/$sellerId'
      fullPath: '/sellers/list/edit/$sellerId'
      preLoaderRoute: typeof SellersListEditSellerIdImport
      parentRoute: typeof SellersListImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthProfileRoute: typeof AuthProfileRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthProfileRoute: AuthProfileRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface BuyersListRouteChildren {
  BuyersListBuyerIdRoute: typeof BuyersListBuyerIdRoute
  BuyersListEditBuyerIdRoute: typeof BuyersListEditBuyerIdRoute
}

const BuyersListRouteChildren: BuyersListRouteChildren = {
  BuyersListBuyerIdRoute: BuyersListBuyerIdRoute,
  BuyersListEditBuyerIdRoute: BuyersListEditBuyerIdRoute,
}

const BuyersListRouteWithChildren = BuyersListRoute._addFileChildren(
  BuyersListRouteChildren,
)

interface BuyersRouteChildren {
  BuyersListRoute: typeof BuyersListRouteWithChildren
  BuyersNewRoute: typeof BuyersNewRoute
}

const BuyersRouteChildren: BuyersRouteChildren = {
  BuyersListRoute: BuyersListRouteWithChildren,
  BuyersNewRoute: BuyersNewRoute,
}

const BuyersRouteWithChildren =
  BuyersRoute._addFileChildren(BuyersRouteChildren)

interface SellersListSellerIdRouteChildren {
  SellersListSellerIdWoodPiecesListRoute: typeof SellersListSellerIdWoodPiecesListRoute
}

const SellersListSellerIdRouteChildren: SellersListSellerIdRouteChildren = {
  SellersListSellerIdWoodPiecesListRoute:
    SellersListSellerIdWoodPiecesListRoute,
}

const SellersListSellerIdRouteWithChildren =
  SellersListSellerIdRoute._addFileChildren(SellersListSellerIdRouteChildren)

interface SellersListRouteChildren {
  SellersListSellerIdRoute: typeof SellersListSellerIdRouteWithChildren
  SellersListEditSellerIdRoute: typeof SellersListEditSellerIdRoute
}

const SellersListRouteChildren: SellersListRouteChildren = {
  SellersListSellerIdRoute: SellersListSellerIdRouteWithChildren,
  SellersListEditSellerIdRoute: SellersListEditSellerIdRoute,
}

const SellersListRouteWithChildren = SellersListRoute._addFileChildren(
  SellersListRouteChildren,
)

interface SellersRouteChildren {
  SellersListRoute: typeof SellersListRouteWithChildren
  SellersNewRoute: typeof SellersNewRoute
}

const SellersRouteChildren: SellersRouteChildren = {
  SellersListRoute: SellersListRouteWithChildren,
  SellersNewRoute: SellersNewRoute,
}

const SellersRouteWithChildren =
  SellersRoute._addFileChildren(SellersRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/buyers': typeof BuyersRouteWithChildren
  '/login': typeof LoginRoute
  '/sellers': typeof SellersRouteWithChildren
  '/profile': typeof AuthProfileRoute
  '/buyers/list': typeof BuyersListRouteWithChildren
  '/buyers/new': typeof BuyersNewRoute
  '/sellers/list': typeof SellersListRouteWithChildren
  '/sellers/new': typeof SellersNewRoute
  '/buyers/list/$buyerId': typeof BuyersListBuyerIdRoute
  '/sellers/list/$sellerId': typeof SellersListSellerIdRouteWithChildren
  '/buyers/list/edit/$buyerId': typeof BuyersListEditBuyerIdRoute
  '/sellers/list/$sellerId/wood-pieces-list': typeof SellersListSellerIdWoodPiecesListRoute
  '/sellers/list/edit/$sellerId': typeof SellersListEditSellerIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/buyers': typeof BuyersRouteWithChildren
  '/login': typeof LoginRoute
  '/sellers': typeof SellersRouteWithChildren
  '/profile': typeof AuthProfileRoute
  '/buyers/list': typeof BuyersListRouteWithChildren
  '/buyers/new': typeof BuyersNewRoute
  '/sellers/list': typeof SellersListRouteWithChildren
  '/sellers/new': typeof SellersNewRoute
  '/buyers/list/$buyerId': typeof BuyersListBuyerIdRoute
  '/sellers/list/$sellerId': typeof SellersListSellerIdRouteWithChildren
  '/buyers/list/edit/$buyerId': typeof BuyersListEditBuyerIdRoute
  '/sellers/list/$sellerId/wood-pieces-list': typeof SellersListSellerIdWoodPiecesListRoute
  '/sellers/list/edit/$sellerId': typeof SellersListEditSellerIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/buyers': typeof BuyersRouteWithChildren
  '/login': typeof LoginRoute
  '/sellers': typeof SellersRouteWithChildren
  '/_auth/profile': typeof AuthProfileRoute
  '/buyers/list': typeof BuyersListRouteWithChildren
  '/buyers/new': typeof BuyersNewRoute
  '/sellers/list': typeof SellersListRouteWithChildren
  '/sellers/new': typeof SellersNewRoute
  '/buyers/list/$buyerId': typeof BuyersListBuyerIdRoute
  '/sellers/list/$sellerId': typeof SellersListSellerIdRouteWithChildren
  '/buyers/list/edit/$buyerId': typeof BuyersListEditBuyerIdRoute
  '/sellers/list/$sellerId/wood-pieces-list': typeof SellersListSellerIdWoodPiecesListRoute
  '/sellers/list/edit/$sellerId': typeof SellersListEditSellerIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/buyers'
    | '/login'
    | '/sellers'
    | '/profile'
    | '/buyers/list'
    | '/buyers/new'
    | '/sellers/list'
    | '/sellers/new'
    | '/buyers/list/$buyerId'
    | '/sellers/list/$sellerId'
    | '/buyers/list/edit/$buyerId'
    | '/sellers/list/$sellerId/wood-pieces-list'
    | '/sellers/list/edit/$sellerId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/buyers'
    | '/login'
    | '/sellers'
    | '/profile'
    | '/buyers/list'
    | '/buyers/new'
    | '/sellers/list'
    | '/sellers/new'
    | '/buyers/list/$buyerId'
    | '/sellers/list/$sellerId'
    | '/buyers/list/edit/$buyerId'
    | '/sellers/list/$sellerId/wood-pieces-list'
    | '/sellers/list/edit/$sellerId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/buyers'
    | '/login'
    | '/sellers'
    | '/_auth/profile'
    | '/buyers/list'
    | '/buyers/new'
    | '/sellers/list'
    | '/sellers/new'
    | '/buyers/list/$buyerId'
    | '/sellers/list/$sellerId'
    | '/buyers/list/edit/$buyerId'
    | '/sellers/list/$sellerId/wood-pieces-list'
    | '/sellers/list/edit/$sellerId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  BuyersRoute: typeof BuyersRouteWithChildren
  LoginRoute: typeof LoginRoute
  SellersRoute: typeof SellersRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  BuyersRoute: BuyersRouteWithChildren,
  LoginRoute: LoginRoute,
  SellersRoute: SellersRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/buyers",
        "/login",
        "/sellers"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/profile"
      ]
    },
    "/buyers": {
      "filePath": "buyers.tsx",
      "children": [
        "/buyers/list",
        "/buyers/new"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/sellers": {
      "filePath": "sellers.tsx",
      "children": [
        "/sellers/list",
        "/sellers/new"
      ]
    },
    "/_auth/profile": {
      "filePath": "_auth.profile.tsx",
      "parent": "/_auth"
    },
    "/buyers/list": {
      "filePath": "buyers/list.tsx",
      "parent": "/buyers",
      "children": [
        "/buyers/list/$buyerId",
        "/buyers/list/edit/$buyerId"
      ]
    },
    "/buyers/new": {
      "filePath": "buyers/new.tsx",
      "parent": "/buyers"
    },
    "/sellers/list": {
      "filePath": "sellers/list.tsx",
      "parent": "/sellers",
      "children": [
        "/sellers/list/$sellerId",
        "/sellers/list/edit/$sellerId"
      ]
    },
    "/sellers/new": {
      "filePath": "sellers/new.tsx",
      "parent": "/sellers"
    },
    "/buyers/list/$buyerId": {
      "filePath": "buyers/list/$buyerId.tsx",
      "parent": "/buyers/list"
    },
    "/sellers/list/$sellerId": {
      "filePath": "sellers/list/$sellerId.tsx",
      "parent": "/sellers/list",
      "children": [
        "/sellers/list/$sellerId/wood-pieces-list"
      ]
    },
    "/buyers/list/edit/$buyerId": {
      "filePath": "buyers/list/edit.$buyerId.tsx",
      "parent": "/buyers/list"
    },
    "/sellers/list/$sellerId/wood-pieces-list": {
      "filePath": "sellers/list/$sellerId/wood-pieces-list.tsx",
      "parent": "/sellers/list/$sellerId"
    },
    "/sellers/list/edit/$sellerId": {
      "filePath": "sellers/list/edit.$sellerId.tsx",
      "parent": "/sellers/list"
    }
  }
}
ROUTE_MANIFEST_END */
